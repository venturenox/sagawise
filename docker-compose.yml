version: "3.8"
services:
  postgres:
    image: bitnami/postgresql
    container_name: postgres
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ./db_data/:/var/lib/postgresql/data
    environment:
      POSTGRESQL_USERNAME: $POSTGRES_USERNAME
      POSTGRESQL_PASSWORD: $POSTGRES_PASSWORD
      POSTGRESQL_DATABASE: $POSTGRES_DATABASE

  redis:
    image: redis/redis-stack-server
    container_name: redis
    restart: always
    ports:
      - 6379:6379

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - $MACHINE_ADMINER_PORT:$ADMINER_PORT
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres

  redisinsight:
    image: redis/redisinsight
    container_name: redosinsight
    restart: always
    ports:
      - $REDIS_INSIGHT_MACHINE_PORT:$REDIS_INSIGHT_PORT
    depends_on:
      - redis

  sagawise:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: sagawise
    restart: always
    ports:
      - 5000:5000
    environment:
      REDIS_CONNECTION_STRING: $REDIS_CONNECTION_STRING
      REDIS_HOST: $REDIS_HOST
      REDIS_PORT: $REDIS_PORT
      POSTGRES_HOST: $POSTGRES_HOST
      POSTGRES_PORT: $POSTGRES_PORT
      POSTGRES_USERNAME: $POSTGRES_USERNAME
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DATABASE: $POSTGRES_DATABASE
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -f http://localhost:5000/live || exit 1; curl -f http://localhost:5000/ready || exit 1",
        ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s

    depends_on:
      - redis
      - postgres
